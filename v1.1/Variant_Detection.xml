<tool id="Variant_Detection" name="Bioinformatics Pipeline v1.1">
  <description>Detect and/or annotate variants from IonTorrent data</description>
  <command interpreter="python">
	#if $mode_select.mode=="Variant_Detection"
		Variant_Detection.py --galaxy_html_file $html_file --galaxy_output_directory $html_file.files_path --regions $mode_select.regions -c $mode_select.base_output -t $mode_select.tumor_bam -n $mode_select.normal_bam --tumor-purity=$mode_select.tumor_purity --normal-purity=$mode_select.normal_purity -p $mode_select.platform -s $mode_select.status --ion_reporter_vcf=$mode_select.ionreporter_vcf --ion_reporter_tsv=$mode_select.ionreporter_tsv
	#else
		Variant_Detection.py --galaxy_html_file $html_file --galaxy_output_directory $html_file.files_path --annotation_mode -c $mode_select.base_output -v $mode_select.varscan_vcf --ion_reporter_tsv=$mode_select.ionreporter_tsv --ion_reporter_vcf=$mode_select.ionreporter_vcf
	#end if
</command>
	

<inputs>
<conditional name="mode_select">
<param name="mode" type="select" label="Select mode" help="">
    <option value="Variant_Detection">Detection and Annotation</option>
    <option value="Variant_Annotation">Annotation ONLY</option>
</param>
<when value="Variant_Detection">
	<param name="regions" type="select" label="Target Regions for detection">
		<option value="CCP" selected="true">Comprehensive Cancer Panel (409 Gene)</option>
		<option value="OCP">Oncomine Cancer Panel</option>
	</param>
	<param name="status" type="select" label="Variant status to detect">
		<option value="All">All(Germline, Somatic, and LOH)</option>
		<option value="All-HC">All(High-Confidence)</option>
		<option value="Somatic">Somatic</option>
		<option value="LOH">LOH(Loss of Heterozygosity)</option>
		<option value="Somatic_LOH">Somatic and LOH</option>
	</param>
	<param name="platform" type="select" label="Platform sequencing was performed on">
		<option value="PGM" selected="true">PGM</option>
		<option value="Proton">Proton</option>
	</param>
	<param name="base_output" type="text" label="Base output name for files." help="If CoPath ID exists, it is suggested you use this for base output name."/>
	<param name="tumor_purity" type="float" value="1" label="Tumor purity" help="Enter tumor tissue purity from 0 to 1"/>
	<param name="normal_purity" type="float" value="1" label="Normal purity" help="Enter normal tissue purity from 0 to 1."/>
	<param name="tumor_bam" type="data" format="bam" label="Tumor bam"/>
	<param name="normal_bam" type="data" format="bam" label="Normal bam" help="If no normal bam is selected, please import a Population Normal bam from the 'Data Libraries' option that is appropriate for your platform."/>
	<param name="ionreporter_vcf" type="data" format="vcf" label="VCF from IonReporter"/>
	<param name="ionreporter_tsv" type="data" format="tabular" label="TSV from IonReporter."/>
</when>
	

<when value="Variant_Annotation">
	<param name="base_output" type="text" label="Base output name for files." help="If CoPath ID exists, it is suggested you use this for base output name."/>	
	<param name="ionreporter_vcf" type="data" format="vcf" label="VCF from IonReporter"/>
        <param name="ionreporter_tsv" type="data" format="tabular" label="TSV from IonReporter."/>	
	<param name="varscan_vcf" type="data" format="vcf" label="VCF from VarScan"/>
</when>
</conditional>
</inputs>
  <outputs>
    <data format="html" name="html_file" />
  </outputs>

<help>
This tool is a wrapper script for variant annotation and detection using the IonTorrent data.  The tool can be run in two modes: (1) Variant Detection and Annotation or (2) Variant Annotation only.  The first mode required four files for input: tumor and normal BAMs, IonReporter vcf, and IonReporter tsv.  For annotation only mode, three files are submitted as input: varscan vcf, IonReporter vcf, and IonReporter tsv.  PLEASE NOTE: The IonReporter vcf contains formatting errors and must be corrected before running through this pipeline.
</help>

</tool>
